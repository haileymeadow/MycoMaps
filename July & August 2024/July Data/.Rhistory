summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Y-Axis Breaks
y_breaks <- seq(0, ceiling(max_count / 2) * 2, by = 2)  # Ensure even number intervals
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Times New Roman") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "Times New Roman"),
axis.text.y = element_text(size = axis_text_size, family = "Times New Roman"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "Times New Roman"),
axis.title.x = element_text(size = axis_title_size, family = "Times New Roman"),
axis.title.y = element_text(size = axis_title_size, family = "Times New Roman"),
legend.title = element_text(size = legend_title_size, family = "Times New Roman"),
legend.text = element_text(size = legend_text_size, family = "Times New Roman"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Y-Axis Breaks
y_breaks <- seq(0, ceiling(max_count / 2) * 2, by = 2)  # Ensure even number intervals
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Times New Roman") +  # Base Font
theme(
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
warnings()
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
warnings()
ibrary(ggplot2) # Visualize Results
library(ggplot2) # Visualize Results
library(dplyr) # Manipulate Data
library(RColorBrewer) # Color Palette
library(extrafont)
# Load Data ----
# Set working directory on Windows
setwd("C:/Users/wittk/OneDrive/Documents/MycoMaps/MycoMaps/July & August 2024/July Data")
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Y-Axis Breaks
y_breaks <- seq(0, ceiling(max_count / 2) * 2, by = 2)  # Ensure even number intervals
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "sans"),
axis.text.y = element_text(size = axis_text_size, family = "sans"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "sans"),
axis.title.x = element_text(size = axis_title_size, family = "sans"),
axis.title.y = element_text(size = axis_title_size, family = "sans"),
legend.title = element_text(size = legend_title_size, family = "sans"),
legend.text = element_text(size = legend_text_size, family = "sans"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
library(ggplot2) # Visualize Results
library(dplyr) # Manipulate Data
library(RColorBrewer) # Color Palette
library(extrafont)
# Load Data ----
# Set working directory on Windows
setwd("C:/Users/wittk/OneDrive/Documents/MycoMaps/MycoMaps/July & August 2024/July Data")
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Y-Axis Breaks
y_breaks <- seq(0, ceiling(max_count / 2) * 2, by = 2)  # Ensure even number intervals
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "sans"),
axis.text.y = element_text(size = axis_text_size, family = "sans"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "sans"),
axis.title.x = element_text(size = axis_title_size, family = "sans"),
axis.title.y = element_text(size = axis_title_size, family = "sans"),
legend.title = element_text(size = legend_title_size, family = "sans"),
legend.text = element_text(size = legend_text_size, family = "sans"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
library(ggplot2) # Visualize Results
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "sans"),
axis.text.y = element_text(size = axis_text_size, family = "sans"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "sans"),
axis.title.x = element_text(size = axis_title_size, family = "sans"),
axis.title.y = element_text(size = axis_title_size, family = "sans"),
legend.title = element_text(size = legend_title_size, family = "sans"),
legend.text = element_text(size = legend_text_size, family = "sans"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
# Load Data ----
# Set working directory on Windows
setwd("C:/Users/wittk/OneDrive/Documents/MycoMaps/MycoMaps/July & August 2024/July Data")
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "sans") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "sans"),
axis.text.y = element_text(size = axis_text_size, family = "sans"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "sans"),
axis.title.x = element_text(size = axis_title_size, family = "sans"),
axis.title.y = element_text(size = axis_title_size, family = "sans"),
legend.title = element_text(size = legend_title_size, family = "sans"),
legend.text = element_text(size = legend_text_size, family = "sans"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
library(ggplot2) # Visualize Results
library(dplyr) # Manipulate Data
library(RColorBrewer) # Color Palette
library(extrafont) # Fonts
# Load Data ----
# Set working directory on Windows
setwd("C:/Users/wittk/OneDrive/Documents/MycoMaps/MycoMaps/July & August 2024/July Data")
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "arial") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "arial"),
axis.text.y = element_text(size = axis_text_size, family = "arial"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "arial"),
axis.title.x = element_text(size = axis_title_size, family = "arial"),
axis.title.y = element_text(size = axis_title_size, family = "arial"),
legend.title = element_text(size = legend_title_size, family = "arial"),
legend.text = element_text(size = legend_text_size, family = "arial"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
font_import()
font_import()
loadfonts()
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "cambria") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "cambria"),
axis.text.y = element_text(size = axis_text_size, family = "cambria"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "cambria"),
axis.title.x = element_text(size = axis_title_size, family = "cambria"),
axis.title.y = element_text(size = axis_title_size, family = "cambria"),
legend.title = element_text(size = legend_title_size, family = "cambria"),
legend.text = element_text(size = legend_text_size, family = "cambria"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
Plotting by Order using Colors
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Cambria") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "Cambria"),
axis.text.y = element_text(size = axis_text_size, family = "Cambria"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "Cambria"),
axis.title.x = element_text(size = axis_title_size, family = "Cambria"),
axis.title.y = element_text(size = axis_title_size, family = "Cambria"),
legend.title = element_text(size = legend_title_size, family = "Cambria"),
legend.text = element_text(size = legend_text_size, family = "Cambria"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
str(OhiopyleData)
library(ggplot2) # Visualize Results
library(dplyr) # Manipulate Data
library(RColorBrewer) # Color Palette
library(extrafont) # Fonts
# More Fonts (this is optional, but I prefer utilizing fonts on my system)
# font_import() # Only do this for initial set-up, you should then be able to simply loadfonts()
loadfonts()
# Load Data ----
# Set working directory on Windows
setwd("C:/Users/wittk/OneDrive/Documents/MycoMaps/MycoMaps/July & August 2024/July Data")
# Read the CSV file
OhiopyleData <- read.csv("iNaturalist-July2024(Ohiopyle).csv")
# Analyze Data ----
# Calculate counts per order
order_counts <- OhiopyleData %>%
group_by(taxon_order_name) %>%
summarize(count = n())
# Check all variables are correct
str(OhiopyleData)
# Plotting the Data ----
# Y-axis Limit
max_count <- max(order_counts$count)
# Font Sizes
title_size <- 16
axis_title_size <- 14
axis_text_size <- 12
legend_title_size <- 14
legend_text_size <- 12
# Plotting by Order using Colors
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Cambria") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "Cambria"),
axis.text.y = element_text(size = axis_text_size, family = "Cambria"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "Cambria"),
axis.title.x = element_text(size = axis_title_size, family = "Cambria"),
axis.title.y = element_text(size = axis_title_size, family = "Cambria"),
legend.title = element_text(size = legend_title_size, family = "Cambria"),
legend.text = element_text(size = legend_text_size, family = "Cambria"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
png("iNaturalist-July2024(Ohiopyle)")
# Plotting by Order using Colors
png("Ohiopyle-July2024Abundance", width=1600, height=600)
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Cambria") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "Cambria"),
axis.text.y = element_text(size = axis_text_size, family = "Cambria"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "Cambria"),
axis.title.x = element_text(size = axis_title_size, family = "Cambria"),
axis.title.y = element_text(size = axis_title_size, family = "Cambria"),
legend.title = element_text(size = legend_title_size, family = "Cambria"),
legend.text = element_text(size = legend_text_size, family = "Cambria"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
# Plotting by Order using Colors
png("Ohiopyle-July2024Abundance.png")
ggplot(order_counts, aes(x = reorder(taxon_order_name, -count), y = count, fill = taxon_order_name)) +
geom_bar(stat = "identity", color = "black") +
labs(
title = "Abundance of Observations by Taxon Order",
x = "Taxon Order",  # x-axis label
y = "Count",
fill = "Taxon Order"  # Legend title
) +
theme_minimal(base_family = "Cambria") +  # Base Font
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size, family = "Cambria"),
axis.text.y = element_text(size = axis_text_size, family = "Cambria"),
plot.title = element_text(hjust = 0.5, size = title_size, face = "bold", family = "Cambria"),
axis.title.x = element_text(size = axis_title_size, family = "Cambria"),
axis.title.y = element_text(size = axis_title_size, family = "Cambria"),
legend.title = element_text(size = legend_title_size, family = "Cambria"),
legend.text = element_text(size = legend_text_size, family = "Cambria"),
panel.grid.major = element_line(color = "grey80", size = 0.5),  # Add subtle major grid lines
) +
scale_fill_brewer(palette = "Set3") +
scale_y_continuous(
breaks = y_breaks,
limits = c(0, ceiling(max_count / 2) * 2)  # Set y-axis limits
)
dev.off()
